drop table BID if exists;
drop table CATEGORY if exists;
drop table USERS if exists;
drop table BANK_ACCOUNT if exists;
drop table COMMENTS if exists;
drop table CREDIT_CARD if exists;
drop table CATEGORIZED_ITEM if exists;
drop table ITEM if exists;
drop table AUDIT_LOG if exists;
drop table BILLING_DETAILS if exists;
create table BID (
   BID_ID bigint generated by default as identity (start with 1),
   AMOUNT numeric not null,
   AMOUNT_CURRENCY varchar(255) not null,
   CREATED timestamp not null,
   ITEM_ID bigint not null,
   BIDDER_ID bigint not null
);
create table CATEGORY (
   CATEGORY_ID bigint generated by default as identity (start with 1),
   VERSION integer not null,
   NAME varchar(255) not null,
   CREATED timestamp not null,
   PARENT_CATEGORY_ID bigint,
   unique (NAME, PARENT_CATEGORY_ID)
);
create table USERS (
    USER_ID bigint generated by default as identity (start with 1), 
    VERSION integer not null, FIRSTNAME varchar(255) not null, 
    LASTNAME varchar(255) not null, USERNAME varchar(16) not null, 
    "PASSWORD" varchar(12) not null, EMAIL varchar(255) not null, 
    RANKING integer not null, IS_ADMIN bit not null, 
    CREATED timestamp not null, DEFAULT_BILLING_DETAILS_ID bigint, 
    STREET varchar(255), 
    ZIPCODE varchar(16), 
    CITY varchar(255), 
    unique (USERNAME)
);
create table BANK_ACCOUNT (
   BANK_ACCOUNT_ID bigint not null,
   ACCOUNT_NUMBER varchar(16) not null,
   BANK_NAME varchar(255) not null,
   BANK_SWIFT varchar(15) not null,
   primary key (BANK_ACCOUNT_ID)
);
create table COMMENTS (
   COMMENT_ID bigint generated by default as identity (start with 1),
   VERSION integer not null,
   RATING varchar(255) not null,
   COMMENT_TEXT varchar(4000),
   ITEM_ID bigint not null,
   FROM_USER_ID bigint not null
);
create table CREDIT_CARD (
   CREDIT_CARD_ID bigint not null,
   CC_TYPE smallint not null,
   CC_NUMBER varchar(16) not null,
   EXP_MONTH varchar(2) not null,
   EXP_YEAR varchar(4) not null,
   primary key (CREDIT_CARD_ID)
);
create table CATEGORIZED_ITEM (
   CATEGORY_ID bigint not null,
   ITEM_ID bigint not null,
   DATE_ADDED timestamp not null,
   USERNAME varchar(255) not null,
   primary key (CATEGORY_ID, ITEM_ID)
);
create table ITEM (
   ITEM_ID bigint generated by default as identity (start with 1),
   VERSION integer not null,
   NAME varchar(255) not null,
   DESCRIPTION varchar(4000) not null,
   INITIAL_PRICE numeric not null,
   INITIAL_PRICE_CURRENCY varchar(255) not null,
   RESERVE_PRICE numeric,
   RESERVE_PRICE_CURRENCY varchar(255),
   START_DATE timestamp not null,
   END_DATE timestamp not null,
   STATE char(1) not null,
   APPROVAL_DATETIME timestamp,
   CREATED timestamp not null,
   APPROVED_BY_USER_ID bigint,
   SELLER_ID bigint not null,
   SUCCESSFUL_BID_ID bigint
);
create table AUDIT_LOG (
   AUDIT_LOG_ID bigint generated by default as identity (start with 1),
   MESSAGE varchar(255) not null,
   ENTITY_ID bigint not null,
   ENTITY_CLASS varchar(255) not null,
   USER_ID bigint not null,
   CREATED timestamp not null
);
create table BILLING_DETAILS (
   BILLING_DETAILS_ID bigint generated by default as identity (start with 1),
   VERSION integer not null,
   OWNER_NAME varchar(255) not null,
   CREATED timestamp not null,
   USER_ID bigint
);
alter table BID add constraint FK1_ITEM_ID foreign key (ITEM_ID) references ITEM;
alter table BID add constraint FK2_BIDDER_ID foreign key (BIDDER_ID) references USERS;
alter table CATEGORY add constraint FK1_PARENT_CATEGORY_ID foreign key (PARENT_CATEGORY_ID) references CATEGORY;
alter table USERS add constraint FK1_DEFAULT_BILLING_DETAILS_ID foreign key (DEFAULT_BILLING_DETAILS_ID) references BILLING_DETAILS;
alter table BANK_ACCOUNT add constraint FK1_BANK_ACCOUNT_ID foreign key (BANK_ACCOUNT_ID) references BILLING_DETAILS;
alter table COMMENTS add constraint FK3_ITEM_ID foreign key (ITEM_ID) references ITEM;
alter table COMMENTS add constraint FK2_FROM_USER_ID foreign key (FROM_USER_ID) references USERS;
alter table CREDIT_CARD add constraint FK1_CREDIT_CARD_ID foreign key (CREDIT_CARD_ID) references BILLING_DETAILS;
alter table CATEGORIZED_ITEM add constraint FK1C7A5407DBFCB7FC foreign key (CATEGORY_ID) references CATEGORY;
alter table CATEGORIZED_ITEM add constraint FK1C7A5407A8EEBDC7 foreign key (ITEM_ID) references ITEM;
alter table ITEM add constraint FK2_SELLER_ID foreign key (SELLER_ID) references USERS;
alter table ITEM add constraint FK3_SUCCESSFUL_BID_ID foreign key (SUCCESSFUL_BID_ID) references BID;
alter table ITEM add constraint FK1_APPROVED_BY_USER_ID foreign key (APPROVED_BY_USER_ID) references USERS;
alter table BILLING_DETAILS add constraint FK1_USER_ID foreign key (USER_ID) references USERS;
